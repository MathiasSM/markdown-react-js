var handleIterate = function(Tag, props, children) {
  switch(Tag) {
  case 'table':
    props.className = 'table table-striped';
    break;
  case 'code':
    if (props['data-language']) {
      return <Tag {...props} dangerouslySetInnerHTML={{__html: window.hljs.highlight(props['data-language'], children[0]).value}} />
    };
    break;
  }
  return <Tag {...props}>{children}</Tag>;
}

class ComponentExample extends React.Component {
  render() {
    return (
      <div>
        <MDReactComponent text='### (the following content is taken from [MarkdownIt Demo Page](https://markdown-it.github.io/), which is used now in this library as a parser)' />
        <MDReactComponent text='-----' />
        <MDReactComponent text={__markdownText__}
                          onIterate={handleIterate}
                          markdownOptions={{ typographer: true }}
                          plugins={[
                            __plugins__.abbr,
                            {plugin: __plugins__.container, args: ['warning']},
                            __plugins__.deflist,
                            __plugins__.emoji,
                            __plugins__.footnote,
                            __plugins__.ins,
                            __plugins__.mark,
                            __plugins__.sub,
                            __plugins__.sup
                          ]} />
        <MDReactComponent text='-----' />
        <MDReactComponent text='#### This page is using [Component Playground](https://github.com/FormidableLabs/component-playground), check it out' />
      </div>
    )
  }
};

React.render(<ComponentExample/>, mountNode);